#
# Copyright (C) 2023 Intel Corporation.
#
# SPDX-License-Identifier: BSD-3-Clause
#

FROM intel/dlstreamer:2022.3.0-ubuntu22-gpu555-dpcpp-devel as dls_gpu419-43-RC2_build
USER root
WORKDIR /dlstreamersrc
COPY frameworks.ai.dlstreamer.pipeline-framework-2022.2.1-gpu419.43-RC2/ .
RUN mkdir -p build; cd build; cmake -DCMAKE_INSTALL_PREFIX=/opt/intel/dlstreamer  ..; make --jobs=$(nproc --all) install

FROM intel/dlstreamer:2022.3.0-ubuntu22-gpu555-dpcpp-devel as optional_fw_build
COPY --from=dls_gpu419-43-RC2_build /opt/intel/dlstreamer /opt/intel/dlstreamer
USER root 
RUN if [ ! -z "$HTTP_PROXY" ] ; then  echo "Acquire::http::Proxy \"$HTTP_PROXY\";" >  /etc/apt/apt.conf; fi
RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    build-essential \
    autoconf \
    git \
    libssl-dev \
    libusb-1.0-0-dev \
    libudev-dev \
    pkg-config \
    libgtk-3-dev \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    nasm \
    ninja-build \
    cmake  \
    python3  \
    python3-pip  \
    meson && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


# Install latest OpenVINO - 2022.3.0.dev20221125 pre-release
# Note about pre-release
# NOTE: This version is pre-release software and has not undergone full release validation or qualification. No support is offered on pre-release software and APIs/behavior are subject to change. It should NOT be incorporated into any production software/solution and instead should be used only for early testing and integration while awaiting a final release version of this software.
#
WORKDIR /tmp
#RUN wget https://github.com/openvinotoolkit/openvino/archive/refs/tags/2022.3.0.dev20221125.zip; unzip 2022.3.0.dev20221125.zip
RUN git clone https://github.com/openvinotoolkit/openvino.git; cd openvino; git checkout 2022.3.0.dev20221125; git submodule update --init --recursive
RUN cd openvino; chmod +x install_build_dependencies.sh; ./install_build_dependencies.sh
RUN cd openvino; mkdir build && cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/intel/openvino_2022 -DCMAKE_BUILD_TYPE=Release ..; make --jobs=$(nproc --all); make install


#FROM intel/dlstreamer:2022.2.0-ubuntu20-gpu419.40
USER root
RUN if [ ! -z "$HTTP_PROXY" ] ; then  echo "Acquire::http::Proxy \"$HTTP_PROXY\";" >  /etc/apt/apt.conf; fi
RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    build-essential \
    autoconf \
    git \
    libssl-dev \
    libusb-1.0-0-dev \
    libudev-dev \
    pkg-config \
    libgtk-3-dev \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    nasm \
    ninja-build \
    cmake  \
    python3  \
    python3-pip  \
    meson && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install realsense
RUN mkdir -p /rs && cd /rs && git clone https://github.com/gwen2018/librealsense.git
RUN  cd /rs/librealsense && \
    git checkout stream_d436_b && \
    #./scripts/setup_udev_rules.sh && \
    mkdir build && \
    cd build/ && \
    cmake ../ \
        -DBUILD_SHARED_LIBS=true \
        -DBUILD_WITH_JPEGTURBO=true \
        -DBUILD_PYTHON_BINDINGS:bool=true \
        -DBUILD_WITH_CUDA=false \
        -DFORCE_RSUSB_BACKEND=false \
        -DPYTHON_EXECUTABLE=/usr/bin/python3 \
        -DBUILD_GLSL_EXTENSIONS=false \
        -DBUILD_WITH_CPU_EXTENSIONS=true \
        -DBUILD_UNIT_TESTS=false \
	-DBUILD_GRAPHICAL_EXAMPLES=false \
	-DCMAKE_BUILD_TYPE=Release && \
    make -j$(cat /proc/cpuinfo |grep proc |wc -l) && \
    make install 
    #export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.6/pyrealsense2 && \
    #python3 -c "import pyrealsense2 as rs; print(rs)"
RUN mv /rs/librealsense/build/libjpeg-turbo/lib/libturbojpeg.so* /usr/local/lib
# Build gst realsense element. Use github version once pull request is accepted with bug fixes
RUN cd /rs && git clone https://github.com/brian-intel/realsense-gstreamer
RUN cd /rs/realsense-gstreamer && /usr/bin/meson . build && ninja -C build
RUN cp /rs/realsense-gstreamer/build/src/libgstrealsense_meta.so /opt/intel/dlstreamer/gstreamer/lib/
RUN cp /rs/realsense-gstreamer/build/src/libgstrealsensesrc.so /opt/intel/dlstreamer/gstreamer/lib/gstreamer-1.0
RUN cp /usr/local/lib/libturbojpeg.so* /opt/intel/dlstreamer/gstreamer/lib/
#RUN gst-inspect-1.0 realsensesrc

COPY ./requirements.txt /requirements.txt
RUN pip3 install --upgrade pip --no-cache-dir -r /requirements.txt
