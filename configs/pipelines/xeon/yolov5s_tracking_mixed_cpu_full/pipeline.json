{
   "type": "GStreamer",
   "template": [
      " {auto_source}",
      " ! decodebin force-sw-decoders=true",
      " ! gvadetect model-instance-id=ssd name=detection model={models[yolov5s][1][FP32-INT8][network]} threshold=.5 device=CPU",
      " ! gvatrack name=tracking tracking-type=zero-term-imageless",
      " ! tee name=branch",
      " ! queue",
      " ! gvaclassify model-instance-id=clasifier model={models[efficientnet-b0][1][FP16-INT8][network]} reclassify-interval=1 device=CPU inference-region=roi-list name=classification",
      " ! gvametaaggregate name=aggregate",
      " ! gvametaconvert name=metaconvert add-empty-results=true",
      " ! gvametapublish name=destination ! appsink",
      " branch. ! queue ",
      " ! gvapython class=ObjectFilter module=/home/pipeline-server/extensions/tracked_object_filter.py name=tracked_object_filter",
      " ! gvadetect model-instance-id=ocr threshold=.40 model={models[horizontal-text-detection-0001][1][FP16-INT8][network]} name=text_detection device=CPU inference-region=roi-list",
      " ! gvainference model-instance-id=ocr2 model={models[text-recognition-0014][1][FP16-INT8][network]} inference-region=roi-list name=text_recognition object-class=text ",
      " ! gvapython class=OCR module=/home/pipeline-server/extensions/OCR_post_processing.py name=ocr_postprocess",
      " ! aggregate.",
      " branch. ! queue ",
      " ! videoconvert ! video/x-raw,format=BGR",
      " ! gvapython name=barcode class=BarcodeDetection module=/home/pipeline-server/extensions/barcode.py",
      " ! aggregate."
   ],
   "description": "Yolov5s SCO Pipeline with Tracking Mixed",
   "parameters": {
      "type": "object",
      "properties": {
         "detection": {
            "type": "object",
            "element": {
               "name": "detection",
               "format": "element-properties"
            }
         },
         "text-detection": {
            "type": "object",
            "element": {
               "name": "text_detection",
               "format": "element-properties"
            }
         },
         "text-recognition": {
            "type": "object",
            "element": {
               "name": "text_recognition",
               "format": "element-properties"
            }
         },
         "barcode-properties": {
            "element": {
               "name": "barcode",
               "property": "kwarg",
               "format": "json"
            },
            "type": "object",
            "properties": {
               "disable": {
                  "type": "boolean"
               },
               "decode_type": {
                  "type": "string"
               },
               "reclassify_interval": {
                  "type": "integer"
               },
               "max_tracked_objects": {
                  "type": "integer"
               }
            }
         },
         "OCR-properties": {
            "element": {
               "name": "ocr_postprocess",
               "property": "kwarg",
               "format": "json"
            },
            "type": "object",
            "properties": {
               "threshold": {
                  "type": "number"
               }
            },
            "default": {
               "threshold": 0.5
            }
         },
         "classification": {
            "type": "object",
            "element": {
               "name": "classification",
               "format": "element-properties"
            }
         },
         "classification-filter": {
            "element": {
               "name": "classification_filter",
               "format": "json",
               "property": "kwarg"
            },
            "type": "object",
            "properties": {
               "object_filter": {
                  "type": "array"
               }
            }
         },
         "classification-filter-num-objects": {
            "element": {
               "name": "classification_filter_num_objects",
               "format": "json",
               "property": "kwarg"
            },
            "type": "object",
            "properties": {
               "enable": {
                  "type": "boolean"
               },
               "min_objects": {
                  "type": "integer"
               },
               "max_objects": {
                  "type": "integer"
               },
               "fake_object_width": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
               },
               "fake_object_height": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
               }
            }
         }
      }
   }
}
